- name: Make group for the user who runs server
  group:
    name: "{{ user }}"
    state: present

- name: Make user to run server
  user:
    name: "{{ user }}"
    comment: "User to run server"
    group: "{{ user }}"

- name: Add user {{ user }} to docker group
  user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Install Dropbox Python SDK
  pip:
    name: dropbox
    state: present

- name: Update Python requests lib
  pip:
    name: requests
    extra_args: "--upgrade"
    state: latest

- name: Copy backup scripts
  copy:
    src: "{{ item }}"
    dest: "/home/{{ user }}/"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0700
  with_items:
    - ../../scripts/db_backup.sh
    - ../../scripts/dropbox_upload.py

- name: Copy Docker Compose config
  copy:
    src: ../docker/docker-compose-prod.yml
    dest: "/home/{{ user }}/docker-compose.yml"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0600

- name: Make dirs for logs
  file:
    path: /var/log/nott/
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0755

- name: Make dirs for backups
  file:
    path: /var/backups/nott/
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0755

- name: Apply DB migrations
  command: docker-compose run --rm app python3 /srv/smart_manage.py migrate
  args:
    chdir: "/home/{{ user }}/"
  notify: restart nott

- name: Populate DB
  command: docker-compose run --rm app python3 /srv/smart_manage.py loaddata /srv/apps/users/fixtures/admin.json
  args:
    chdir: "/home/{{ user }}/"
  notify: restart nott

- name: Run server
  command: docker-compose up -d
  args:
    chdir: "/home/{{ user }}/"

- name: Make cron job to backup DB
  cron:
    name: backup db_nott
    hour: "2"
    job: "/home/{{ user }}/db_backup.sh"
    user: nott
    state: present

- name: Obtain LetEncrypt certificate
  command: docker exec -it nott_certbot_1 certbot certonly
    --webroot
    -w /srv/public/
    -d {{ server_dns }}
    -d www.{{ server_dns }}
